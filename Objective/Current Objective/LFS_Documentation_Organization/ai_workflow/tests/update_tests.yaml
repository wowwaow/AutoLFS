# Update Pipeline Tests
version: '1.0'

# Update Detection Tests
test_update_detection:
  upstream_versions:
    test_new_version:
      input:
        current_version: "1.2.3"
        upstream_version: "1.2.4"
      expected:
        detect_update: true
        update_type: "patch"
    test_major_version:
      input:
        current_version: "1.2.3"
        upstream_version: "2.0.0"
      expected:
        detect_update: true
        update_type: "major"

  dependency_changes:
    test_dependency_update:
      input:
        current_deps:
          - "gcc-8.0.0"
          - "make-4.2"
        new_deps:
          - "gcc-9.0.0"
          - "make-4.3"
      expected:
        detect_update: true
        affected_deps:
          - "gcc"
          - "make"

  security_advisories:
    test_security_update:
      input:
        advisory:
          package: "example-package"
          severity: "critical"
          cve: "CVE-2025-1234"
      expected:
        detect_update: true
        priority: "critical"
        immediate_notification: true

# Content Update Tests
test_content_updates:
  version_update:
    test_basic_info_update:
      input:
        section: "A1_basic_info"
        old_version: "1.2.3"
        new_version: "1.2.4"
      expected:
        updates:
          - field: "version"
          - field: "release_date"

  dependency_update:
    test_required_packages:
      input:
        section: "B8_required_packages"
        old_deps:
          - "gcc >= 8.0.0"
        new_deps:
          - "gcc >= 9.0.0"
      expected:
        updates:
          - field: "required_packages"
          - field: "compatibility_matrix"

# Workflow Tests
test_workflow:
  pre_update:
    test_backup:
      input: "test_fixtures.yaml#basic_package"
      expected:
        backup_created: true
        backup_verified: true

    test_validation:
      input:
        changes:
          version: "1.2.4"
          dependencies:
            - "gcc >= 9.0.0"
      expected:
        validation_passed: true

  update_process:
    test_successful_update:
      input:
        template: "test_fixtures.yaml#basic_package"
        updates:
          - version: "1.2.4"
          - checksum: "new_checksum"
      expected:
        success: true
        updated_files:
          - "A1_basic_info"
          - "C13_source_verification"

    test_failed_update:
      input:
        template: "test_fixtures.yaml#invalid_package"
        updates:
          - version: "invalid"
      expected:
        success: false
        error: "Invalid version format"

# Change Management Tests
test_change_management:
  versioning:
    test_version_bump:
      input:
        current: "1.2.3"
        change_type: "patch"
      expected:
        new_version: "1.2.4"

  changelog:
    test_changelog_generation:
      input:
        changes:
          - type: "added"
            description: "New feature X"
          - type: "fixed"
            description: "Bug fix Y"
      expected:
        changelog_updated: true
        categories_present:
          - "added"
          - "fixed"

# Integration Tests
test_integration:
  full_update_pipeline:
    test_successful_pipeline:
      input:
        template: "test_fixtures.yaml#basic_package"
        updates:
          - type: "version"
            value: "1.2.4"
          - type: "dependency"
            value: "gcc >= 9.0.0"
      stages:
        - update_detection
        - content_update
        - workflow_execution
        - change_management
      expected: pass

    test_failed_pipeline:
      input:
        template: "test_fixtures.yaml#invalid_package"
        updates:
          - type: "version"
            value: "invalid"
      stages:
        - update_detection
        - content_update
        - workflow_execution
        - change_management
      expected: fail
      error_messages:
        - "Invalid version format"
        - "Update validation failed"

