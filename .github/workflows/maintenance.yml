name: System Maintenance

on:
  schedule:
    - cron: '0 2 * * 0'  # Run at 2 AM UTC every Sunday
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    paths:
      - '**/requirements.txt'
      - '**/package.json'
      - '**/Cargo.toml'
      - '**/*.yaml'
      - '**/*.yml'

permissions:
  contents: write
  pull-requests: write
  issues: write
  security-events: write

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Security Scan
        uses: github/codeql-action/init@v2
        with:
          languages: python, javascript, shell

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run SAST
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:python"

  dependency-updates:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety pip-audit

      - name: Check Python dependencies
        run: |
          safety check -r **/requirements.txt || true
          pip-audit **/requirements.txt || true

      - name: Create Dependency Update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Update dependencies"
          title: "chore: Update project dependencies"
          body: |
            Automated dependency updates by the maintenance workflow.
            
            ## Changes
            - Updated dependencies to their latest compatible versions
            - Ran security checks on updated dependencies
            
            ## Security Impact
            - [ ] Security scan passed
            - [ ] No known vulnerabilities introduced
            
            ## Testing
            Please test these changes thoroughly before merging.
          branch: "maintenance/dependency-updates"
          base: "main"
          labels: "dependencies,automated"

  system-maintenance:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check file integrity
        run: |
          find . -type f -name "*.sh" -exec bash -n {} \; || true
          find . -type f -name "*.py" -exec python -m py_compile {} \; || true
          find . -type f -name "*.yaml" -exec yamllint {} \; || true

      - name: Cleanup unused files
        run: |
          # Remove obsolete temporary files
          find . -type f -name "*.tmp" -mtime +7 -delete
          find . -type f -name "*.bak" -mtime +7 -delete
          
          # Clean up old cache files
          find . -type f -name ".*.cache" -mtime +30 -delete
          find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

      - name: Update documentation
        run: |
          # Update timestamp in docs
          find docs/ -type f -name "*.md" -exec sed -i "s/Last updated:.*/Last updated: $(date -u)/" {} \;
          
          # Generate any automated documentation
          if [ -f "docs/generate_docs.sh" ]; then
            bash docs/generate_docs.sh
          fi

      - name: Verify configurations
        run: |
          # Check YAML configurations
          find . -type f -name "*.yaml" -o -name "*.yml" | while read -r file; do
            echo "Checking $file"
            python -c "import yaml; yaml.safe_load(open('$file'))" || echo "Warning: Invalid YAML in $file"
          done
          
          # Check shell scripts
          find . -type f -name "*.sh" | while read -r file; do
            echo "Checking $file"
            shellcheck "$file" || echo "Warning: Shell script issues in $file"
          done

      - name: Create Maintenance Report
        run: |
          {
            echo "# System Maintenance Report"
            echo "Generated: $(date -u)"
            echo ""
            echo "## Actions Performed"
            echo "* Cleaned up temporary files"
            echo "* Verified file integrity"
            echo "* Updated documentation timestamps"
            echo "* Checked configurations"
            echo ""
            echo "## Statistics"
            echo "* Total files scanned: $(find . -type f | wc -l)"
            echo "* Shell scripts verified: $(find . -type f -name "*.sh" | wc -l)"
            echo "* YAML configs checked: $(find . -type f -name "*.yaml" -o -name "*.yml" | wc -l)"
            echo "* Documentation files updated: $(find docs/ -type f -name "*.md" | wc -l)"
          } > "System Logs/MAINTENANCE_REPORT.md"

      - name: Commit Maintenance Changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "chore: System maintenance updates [skip ci]"
            git push
          fi

  notify:
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-updates, system-maintenance]
    if: always()
    steps:
      - name: Check workflow status
        run: |
          if [ "${{ contains(needs.*.result, 'failure') }}" = "true" ]; then
            echo "::error::One or more maintenance tasks failed"
            exit 1
          fi

      - name: Create issue on failure
        if: failure()
        run: |
          gh issue create \
            --title "Maintenance Workflow Failed" \
            --body "The system maintenance workflow encountered errors. Please check the workflow logs for details." \
            --label "maintenance,automated,bug"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

